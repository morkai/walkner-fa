<div class="row fa-ot-details-props">
  <div class="col-md-7" style="margin-bottom: 20px">
    <div class="panel panel-primary">
      <div class="panel-heading">
        <span class="visible-print"><%= details.no %></span>
        <span class="hidden-print"><%- t('PANEL:TITLE:details') %></span>
      </div>
      <div class="panel-details">
        <%- helpers.props(details, [
          '!protocolNeeded',
          '!commissioningType',
          {id: '!extendedDep', visible: model.commissioningType === 'inc-asset'},
          '!usageDestination',
          {id: '!protocolDate', visible: model.protocolNeeded},
          {id: '!protocolNo', visible: model.protocolNeeded, valueClassName: 'text-fixed'},
          '!documentDate',
          {id: '!documentNo', valueClassName: 'text-fixed'},
          helpers.fa.zplxProp(),
          '!postingDate'
        ]) %>
      </div>
    </div>
    <div id="<%- id('assets') %>" class="panel panel-default fa-ot-details-assets">
      <div class="panel-heading"><%- t('PANEL:TITLE:assets') %></div>
      <div class="panel-body">
        <ul class="nav nav-tabs">
          <% model.assets.forEach((asset, i) => { %>
          <li class="<%- asset._id === activeAssetId ? 'active' : '' %>" data-asset-id="<%- asset._id %>"><a href="javascript:void(0)"><%- i + 1 %></a></li>
          <% }) %>
        </ul>
        <div class="tab-content">
          <% details.assets.forEach((asset, i) => { %>
          <div id="<%- id(asset._id) %>" class="tab-pane <%- asset._id === activeAssetId ? 'active' : '' %>">
            <%- helpers.props(asset, [
              'assetName',
              {id: 'lineSymbol', visible: model.usageDestination === 'factory', valueClassName: 'text-fixed', value: v => v || ' '},
              {id: 'inventoryNo', valueClassName: 'text-fixed', value: v => v || ' '},
              {id: 'serialNo', valueClassName: 'text-fixed', value: v => v || ' '},
              'supplier',
              'value',
              {id: 'costCenter', valueClassName: 'text-fixed', value: v => v || ' '},
              'evalGroup1',
              'evalGroup5',
              'assetClass',
              {id: 'vendorNo', visible: model.usageDestination === 'external-supplier'},
              {id: 'vendorName', visible: model.usageDestination === 'external-supplier'},
              'depRate',
              'depKey',
              'economicMethod',
              {id: 'fiscalMethod', valueClassName: 'text-pre'},
              {id: 'taxMethod', valueClassName: 'text-pre'},
              'economicPeriod',
              'fiscalPeriod',
              'taxPeriod',
              helpers.fa.transactionsProp(),
              {id: 'assetNo', valueClassName: 'text-fixed', value: v => v || ' '},
              {id: 'accountingNo', valueClassName: 'text-fixed', value: v => v || ' '},
              {id: 'odwNo', valueClassName: 'text-fixed', value: v => v || ' '},
              {id: 'tplNotes', valueClassName: 'text-lines'},
              {
                id: `!photoFile`,
                visible: model.commissioningType === 'new-asset',
                value(file, prop, view)
                {
                  if (!file)
                  {
                    return t('FORM:edit:attachment:empty');
                  }

                  const url = `${view.model.url()}/attachments/photo?asset=${asset._id}`;

                  return `<a href="${url}" target="_blank">${_.escape(file.name)}</a>`;
                }
              }
            ]) %>
          </div>
          <% }) %>
        </div>
      </div>
    </div>
  </div>
  <div class="col-md-5 hidden-print">
    <div class="panel panel-default fa-details-attachments">
      <div class="panel-heading"><%- t('PANEL:TITLE:attachments') %></div>
      <div class="panel-details">
        <%- helpers.props(details, [
          helpers.fa.attachmentProp({name: 'protocol', visible: model.protocolNeeded}),
          helpers.fa.attachmentProp({name: 'outlay'}),
          helpers.fa.attachmentProp({name: 'certificate', visible: model.usageDestination === 'external-supplier'}),
          helpers.fa.attachmentProp({name: 'nameplate', visible: model.usageDestination === 'external-supplier'}),
          {
            id: '!photoFile',
            visible: model.commissioningType === 'new-asset',
            value(value, prop, view)
            {
              const assetsWithPhotos = model.assets.filter(a => !!a.photoFile);

              if (!assetsWithPhotos.length)
              {
                return t('FORM:edit:attachment:empty');
              }

              return assetsWithPhotos.map(asset =>
              {
                const url = `${view.model.url()}/attachments/photo?asset=${asset._id}`;

                return `<a href="${url}" target="_blank">${_.escape(asset.photoFile.name)}</a>`;
              }).join('<br>');
            }
          },
          helpers.fa.attachmentProp({name: 'hrt'}),
          helpers.fa.attachmentProp({name: 'attachment'})
        ]) %>
      </div>
    </div>
    <div class="panel panel-default">
      <div class="panel-heading"><%- t('PANEL:TITLE:stages') %></div>
      <div class="panel-details">
        <%

          function renderStage(stage)
          {
            var html = '';

            if (stage.who)
            {
              html += '<i class="fa fa-clock-o"></i><span>' + stage.when + '</span><br>';
              html += '<i class="fa fa-user-o"></i><span>' + stage.who + '</span>';
            }

            return html;
          }

          const stages = Object.keys(details.stages).map(id =>
          {
            return {
              id: `!stage:${id}`,
              label: t(`stage:${id}`),
              value: renderStage.bind(null, details.stages[id]),
              visible: id !== 'finished' && id !== 'cancelled'
            };
          });

        %>
        <%- helpers.props(details, ['stage'].concat(stages)) %>
      </div>
    </div>
  </div>
</div>
