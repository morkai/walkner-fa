// Part of <https://miracle.systems/p/walkner-fa> licensed under <CC BY-NC-SA 4.0>

'use strict';

const step = require('h5.step');
const moment = require('moment');

const queues = new Map();

module.exports = (doc, done) =>
{
  const Model = doc.constructor;

  if (queues.has(Model))
  {
    queues.get(Model).push({Model, doc, done});

    return;
  }

  queues.set(Model, []);

  generateNext(Model, doc, done);
};

function generateNext(Model, doc, done)
{
  step(
    function()
    {
      Model
        .find({
          createdAt: {
            $gte: moment(doc.createdAt.getTime()).startOf('month').toDate(),
            $lt: moment(doc.createdAt.getTime()).startOf('month').add(1, 'months').toDate()
          }
        })
        .select({no: 1})
        .sort({createdAt: -1})
        .limit(1)
        .lean()
        .exec(this.next());
    },
    function(err, latest)
    {
      if (err)
      {
        done(err);

        unlock(Model);

        return;
      }

      if (latest.length)
      {
        const parts = latest[0].no.split('/');

        parts[0] = (parseInt(parts[0], 10) + 1).toString();

        doc.no = parts.join('/');
      }
      else
      {
        doc.no = `1/${moment(doc.createdAt).format('M/YYYY')}`;
      }

      done(null, unlock.bind(null, Model));
    }
  );
}

function unlock(Model)
{
  const queue = queues.get(Model);

  if (queue.length)
  {
    const next = queue.shift();

    generateNext(next.Model, next.doc, next.done);
  }
  else
  {
    queues.delete(Model);
  }
}
