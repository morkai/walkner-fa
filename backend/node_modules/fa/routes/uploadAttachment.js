// Part of <https://miracle.systems/p/walkner-wmes> licensed under <CC BY-NC-SA 4.0>

'use strict';

const fs = require('fs-extra');
const prepareAttachmentName = require('util/prepareAttachmentName');

module.exports = async (app, module, req, res, next) =>
{
  const {file} = req;

  if (!file)
  {
    return next(app.createError('File missing.', 'INPUT', 400));
  }

  const hash = file.filename.replace(/\..*?$/, '');
  const attachment = {
    hash,
    type: file.mimetype,
    size: file.size,
    name: prepareAttachmentName(file.originalname)
  };

  module.tmpAttachments.set(hash, {
    data: attachment,
    timer: setTimeout(removeAttachmentFile, 30 * 60 * 1000, hash)
  });

  await fs.copy(file.path, file.path.replace(/[\\/]uploads[\\/]fa[\\/]/, '/uploads/fa-bak/'));

  setTimeout(checkStillThere, 5 * 60 * 1000, Date.now());

  res.json(attachment);

  function removeAttachmentFile(hash)
  {
    module.tmpAttachments.delete(hash);

    fs.unlink(file.path, (err) =>
    {
      if (err)
      {
        module.error(err, `Failed to remove an unused attachment.`, {filePath: file.path});
      }
      else
      {
        module.info(`Removed an unused attachment.`, {filePath: file.path});
      }
    });
  }

  async function checkStillThere(startTime)
  {
    const stillThere = await fs.pathExists(file.path);

    if (!stillThere)
    {
      module.warn('Attachment file disappeared?!?', {file});

      return;
    }

    if (Date.now() - startTime > 3600 * 24 * 7 * 1000)
    {
      return;
    }

    setTimeout(checkStillThere, 5 * 60 * 1000, startTime);
  }
};
