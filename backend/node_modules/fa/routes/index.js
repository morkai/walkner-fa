// Part of <https://miracle.systems/p/walkner-fa> licensed under <CC BY-NC-SA 4.0>

'use strict';

const multer = require('multer');
const uploadAttachmentRoute = require('./uploadAttachment');
const sendAttachmentRoute = require('./sendAttachment');
const dictionariesRoute = require('./dictionaries');
const otRoutes = require('./ot');
const ltRoutes = require('./lt');

module.exports = (app, module) =>
{
  const {
    mongoose,
    express,
    user
  } = module;

  const canView = user.auth(
    'FA:VIEW', 'FA:OT:VIEW', 'FA:LT:VIEW'
  );
  const canManage = user.auth('FA:MANAGE');
  const canAttach = user.auth(
    'FA:MANAGE',
    'FA:OT:MANAGE', 'FA:OT:protocol', 'FA:OT:authorize', 'FA:OT:document',
    'FA:LT:MANAGE', 'FA:LT:acceptOwner'
  );

  express.get('/fa/dictionaries', canView, dictionariesRoute.bind(null, app, module));

  Object.keys(module.DICTIONARIES).forEach((dictionaryName) =>
  {
    const Model = mongoose.model(module.DICTIONARIES[dictionaryName]);
    const urlPrefix = `/fa/${dictionaryName}`;

    express.get(urlPrefix, canView, express.crud.browseRoute.bind(null, app, Model));
    express.post(urlPrefix, canManage, express.crud.addRoute.bind(null, app, Model));
    express.get(`${urlPrefix}/:id`, canView, express.crud.readRoute.bind(null, app, Model));
    express.put(`${urlPrefix}/:id`, canManage, express.crud.editRoute.bind(null, app, Model));
    express.delete(`${urlPrefix}/:id`, canManage, express.crud.deleteRoute.bind(null, app, Model));
  });

  express.post(
    '/fa/attachments;upload',
    canAttach,
    multer({
      dest: module.config.uploadsDest,
      limits: {
        fileSize: 10 * 1024 * 1024
      }
    }).single('file'),
    uploadAttachmentRoute.bind(null, app, module)
  );
  express.get(
    '/fa/:documentType/:documentId/attachments/:attachmentProp',
    canView,
    sendAttachmentRoute.bind(null, app, module)
  );

  otRoutes(app, module);
  ltRoutes(app, module);
};
